{"version":3,"file":"static/js/899.b79de7d7.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBP,IAAAA,IAAA,gBAAmBO,EAAnB,oBAAsCN,IADxD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA6BD,GAA7B,uFACkBP,IAAAA,IAAA,gBACZO,EADY,4BACeN,IAFjC,cACCE,EADD,yBAIEA,EAASC,KAAKK,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,uFACiBP,IAAAA,IAAA,gBACXO,EADW,4BACgBN,EADhB,2BADjB,cACCU,EADD,yBAIEA,EAAQP,KAAKC,SAJf,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACiBb,IAAAA,IAAA,+BACIC,EADJ,kBACqBY,IAFtC,cACCF,EADD,yBAIEA,EAAQP,KAAKC,SAJf,oE,oJCvBQ,SAASS,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOF,EAAP,KAAcG,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACQC,GAAQC,EAAAA,EAAAA,MAARD,IACFE,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAIXC,EAAa,IAAIC,gBAAgBH,EAASI,QAAQC,IAAI,UAE5DC,EAAAA,EAAAA,YAAU,WACJJ,IACFK,EAAAA,GAAsBL,GAAYM,KAAKb,GACvCF,EAASS,MAEV,CAACA,IAeJ,OACE,iCACE,kBAAMO,SAXO,SAAAC,GAEf,GADAA,EAAEC,iBACmB,KAAjBrB,EAAMsB,OACR,OAAOC,EAAAA,GAAAA,MAAY,6EAErBN,EAAAA,GAAsBjB,GAAOkB,KAAKb,GAClCG,EAAQgB,MAAR,kBAAkBhB,EAAQE,UAA1B,IAAoCI,OAAO,UAAD,OAAYd,OAKpD,WACE,kBAAOyB,SAhBI,SAAAL,GACfjB,EAASiB,EAAEM,OAAOC,QAeaC,KAAK,OAAOD,MAAO3B,KAC9C,mBAAQ4B,KAAK,SAAb,wBAEF,wBACGxB,EAAOyB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAK1B,EAAL,YAAYwB,EAAMG,IAC1BC,MAAO,CAAEC,KAAMzB,IAHnB,SAMGoB,EAAMM,OAASN,EAAMO,QAPjBP,EAAMG","sources":["services/movies-api.js","views/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2834cce01162bee50a22c300f1f38e88';\n\nexport async function fetchTrends() {\n  const response = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchCastInfo(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchReviewsInfo(movieId) {\n  const respons = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return respons.data.results;\n}\n\nexport async function fetchFilmsByQuery(query) {\n  const respons = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return respons.data.results;\n}\n","import { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as api from '../services/movies-api';\n\nexport default function MovieView() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const { url } = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n\n  // console.log(location);\n\n  const serchQuery = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    if (serchQuery) {\n      api.fetchFilmsByQuery(serchQuery).then(setMovies);\n      setQuery(serchQuery);\n    }\n  }, [serchQuery]);\n\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return toast.error('Введіть запит');\n    }\n    api.fetchFilmsByQuery(query).then(setMovies);\n    history.push({ ...history.location, search: `?query=${query}` });\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input onChange={onChange} type=\"text\" value={query} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link\n              to={{\n                pathname: `${url}/${movie.id}`,\n                state: { from: location },\n              }}\n            >\n              {movie.title || movie.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n"],"names":["axios","API_KEY","fetchTrends","response","data","results","fetchMovieById","movieId","fetchCastInfo","cast","fetchReviewsInfo","respons","fetchFilmsByQuery","query","MovieView","useState","setQuery","movies","setMovies","url","useRouteMatch","history","useHistory","location","useLocation","serchQuery","URLSearchParams","search","get","useEffect","api","then","onSubmit","e","preventDefault","trim","toast","push","onChange","target","value","type","map","movie","to","pathname","id","state","from","title","name"],"sourceRoot":""}